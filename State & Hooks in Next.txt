📌 State & Hooks in React (TSX)
React mein state ka use dynamic data store aur update karne ke liye hota hai. Hooks state aur lifecycle features ko functional components mein laane ke liye use hote hain.

🔹 1. useState Hook (Managing State)
✅ useState ek variable ko state mein store karne ke liye use hota hai.

tsx
Copy
Edit
import { useState } from "react";

export default function Counter() {
  const [count, setCount] = useState(0); // State variable

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={() => setCount(count + 1)}>Increase</button>
    </div>
  );
}
📌 setCount state update karta hai aur component ko re-render karta hai.

🔹 2. useEffect Hook (Side Effects & API Calls)
✅ useEffect component mount/update hone par side effects run karne ke liye use hota hai.

tsx
Copy
Edit
import { useState, useEffect } from "react";

export default function Timer() {
  const [time, setTime] = useState(0);

  useEffect(() => {
    const interval = setInterval(() => {
      setTime((prev) => prev + 1);
    }, 1000);

    return () => clearInterval(interval); // Cleanup
  }, []);

  return <p>Time: {time} sec</p>;
}
📌 useEffect ke andar:

No dependency [] → Runs once (on mount).
With dependencies [value] → Runs when value changes.
Cleanup function → Memory leak se bachne ke liye.
🔹 3. useContext Hook (Global State Sharing)
✅ useContext multiple components mein data share karne ke liye use hota hai.

tsx
Copy
Edit
import { createContext, useContext } from "react";

// 1️⃣ Context create karo
const ThemeContext = createContext("light");

function ThemeDisplay() {
  const theme = useContext(ThemeContext); // 2️⃣ Context use karo
  return <p>Current Theme: {theme}</p>;
}

export default function App() {
  return (
    <ThemeContext.Provider value="dark"> {/* 3️⃣ Context provide karo */}
      <ThemeDisplay />
    </ThemeContext.Provider>
  );
}
📌 Context API ka use:

Global state share karne ke liye (e.g., theme, auth).
Prop drilling se bachne ke liye.
✅ Summary
✔ useState → State handle karne ke liye.
✔ useEffect → Side effects (API calls, timers) ke liye.
✔ useContext → Global state share karne ke liye.